{"version":3,"sources":["colorsArray.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","App","useState","quote","setQuote","author","setAuthor","quotesArray","setQuotesArray","accentColor","setAccentColor","fetchQuotes","url","a","fetch","response","json","parsedJSON","quotes","useEffect","className","style","backgroundColor","color","id","class","title","href","target","rel","onClick","randomInteger","Math","floor","length","random","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca673bf.chunk.js","sourcesContent":["const COLORS_ARRAY = [\n    \"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#648177\" ,\"#0d5ac1\" ,\n\"#f205e6\" ,\"#1c0365\" ,\"#14a9ad\" ,\"#4ca2f9\" ,\"#a4e43f\" ,\"#d298e2\" ,\"#6119d0\",\n\"#d2737d\" ,\"#c0a43c\" ,\"#f2510e\" ,\"#651be6\" ,\"#79806e\" ,\"#61da5e\" ,\"#cd2f00\" ,\n\"#9348af\" ,\"#01ac53\" ,\"#c5a4fb\" ,\"#996635\",\"#b11573\" ,\"#4bb473\" ,\"#75d89e\" ,\n\"#2f3f94\" ,\"#2f7b99\" ,\"#da967d\" ,\"#34891f\" ,\"#b0d87b\" ,\"#ca4751\" ,\"#7e50a8\" ,\n\"#c4d647\" ,\"#e0eeb8\" ,\"#11dec1\" ,\"#289812\" ,\"#566ca0\" ,\"#2f1179\" ,\n\"#935b6d\" ,\"#916988\" ,\"#513d98\" ,\"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\n\"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\n\"#f697c1\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\n\"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\n\"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\n\"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\n\"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\n\"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n\"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n\"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\n\"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n\"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n\"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\n\"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\n\"#73872a\", \"#520d3a\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\n\"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\",\n\"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\n\"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\n\"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\n\"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\n\"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\n\"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\n\"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\n\"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\n\"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\n\"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\n\"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\n\"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\n\"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\n\"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\",\n\"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\",\n\"#88e9b8\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\n\"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\n\"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"\n];\n\nexport default COLORS_ARRAY;","import React, { useState, useEffect } from \"react\";\nimport { FaQuoteLeft, FaQuoteRight, FaTwitter } from \"react-icons/fa\";\nimport \"./App.scss\";\nimport COLORS_ARRAY from \"./colorsArray\";\n\nlet quoteDB =\n  \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"Click in 'change quote' to see your first famous phrase here!\");\n  const [author, setAuthor] = useState(\"\");\n  const [quotesArray, setQuotesArray] = useState(null);\n  const [accentColor, setAccentColor] = useState(\"#2c3e50\");\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotesArray(parsedJSON.quotes);\n  };\n  useEffect(() => {\n    fetchQuotes(quoteDB);\n  }, []);\n\n  const getRandomQuote = () => {\n    //Para encontrar uma posição aleatória do array\n    let randomInteger = Math.floor(quotesArray.length * Math.random());\n\n    setQuote(quotesArray[randomInteger].quote);\n    setAuthor(quotesArray[randomInteger].author);\n    setAccentColor(COLORS_ARRAY[randomInteger]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header\n        className=\"App-header\"\n        style={{ backgroundColor: accentColor, color: accentColor }}\n      >\n        <div id=\"wrapper\">\n          <div id=\"quote-box\" style={{ color: accentColor }}>\n            <div class=\"quote-text\">\n              <FaQuoteLeft />\n              <span id=\"text\">{quote}</span>\n              <FaQuoteRight />\n            </div>\n            <div class=\"quote-author\">\n              - <span id=\"author\">{author}</span>\n            </div>\n            <div class=\"buttons\">\n              <a\n                class=\"button\"\n                id=\"tweet-quote\"\n                title=\"Tweet this quote!\"\n                href={`http://twitter.com/intent/tweet?text=${quote} -${author}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Share\n                <FaTwitter />\n              </a>\n              <button\n                class=\"button\"\n                id=\"new-quote\"\n                style={{ backgroundColor: accentColor }}\n                onClick={() => getRandomQuote()}\n              >\n                Change quote\n              </button>\n            </div>\n          </div>\n          <div class=\"footer\"></div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}